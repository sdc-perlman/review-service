version: "3.8"

services:
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    volumes:
      - mongodb:/data/db
    ports:
      - "27017:27017"
    
  app:
    container_name: reviews
    restart: always
    build: .
    volumes:
      - ./server/:/app/server
    environment: 
      MONGO_URI_DEV: mongodb://mongo:27017/reviews
      PG_DB: reviews
      PG_USER: user
      PG_PASSWORD: password
      HOST: pg
    ports:
      - "5002:5002"
    depends_on: 
      - pg

  pg:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: reviews
    volumes:
      - ./server/dumps/dump.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - ./data/pg:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: user@mail.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "pg:pgsql-server"
    depends_on: 
      - app
      - pg

  proxy:
    image: nginx
    container_name: proxy
    ports: 
      - "80:80"
    volumes: 
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./client/dist:/var/www/my-site
    depends_on: 
      - app
    
  pxy:
    build:
      context: ./proxy
      dockerfile: proxy.dockerfile
    ports:
      - "6002:6002"
    depends_on: 
      - app
    volumes: 
      - ./proxy/server:/app/server
    links:
      - redis


  redis:
    container_name: redis
    restart: always
    image: redis
    ports:
      - "6379:6379"
    expose:
      - 6379


volumes:
  pgadmin-data:
  mongodb: